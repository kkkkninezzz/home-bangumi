# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: 构建docker镜像

on:
  push:
    tags:
      - '*.*.*'
  # pull_request:
  #   branches:
  #     - 'main'
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - uses: graalvm/setup-graalvm@v1
      with:
        java-version: '21'      # See 'Options' section below for all supported versions
        distribution: 'graalvm' # See 'Options' section below for all available distributions
        github-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Build with Maven
      working-directory: ./server/home-bangumi
      run: mvn clean package -Pnative --file pom.xml


    - name: Set up pnpm
      uses: pnpm/action-setup@v3.0.0
      with:
        # File path to the package.json to read "packageManager" configuration
        package_json_file: ./web-ui/home-bangumi-web-ui/package.json
    - name: Build with pnpm
      working-directory: ./web-ui/home-bangumi-web-ui
      run: pnpm install && pnpm build
      
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        # list of Docker images to use as base name for tags
        images: |
          rainine/home-bangumi
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Docker Login
      uses: docker/login-action@v3.1.0
      with:
        # Username used to log against the Docker registry
        username: ${{secrets.DOCKER_USERNAME}}
        # Password or personal access token used to log against the Docker registry
        password: ${{secrets.DOCKER_PASSWORD}}
        
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
      
